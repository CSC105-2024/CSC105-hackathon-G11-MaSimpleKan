// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  fName    String
  sName    String
  tel      String
  Post     Post[]
  Comment  Comment[]
  Votes Votes[]
}

enum Subject {
  Math
  Biology
  Chemistry
  Physics
  Computer
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  subject     Subject
  date        DateTime @default(now())

  userId Int
  User   User @relation(fields: [userId], references: [id])

  Comment Comment[]
}

model Comment {
  id           Int    @id @default(autoincrement())
  text         String
  correctCount Int    @default(0)
  simpleCount  Int    @default(0)

  userId Int
  User   User @relation(fields: [userId], references: [id])

  postId Int
  Post   Post @relation(fields: [postId], references: [id])
  Votes Votes[]
}

enum VoteType {
  Correct
  Simple
}

model Votes {
  id String @id @default(uuid())
  commentId Int 
  userId Int
  voteType VoteType
  Comment Comment @relation(fields: [commentId], references: [id])
  User User @relation(fields: [userId], references: [id])

  @@unique([userId, commentId, voteType])
  @@index([userId, commentId, voteType])
}